#BlueJ class context
comment0.target=SWBild
comment0.text=\n\ SWBild\ ist\ eine\ Klasse,\ die\ Graustufenbilder\ repraesentiert\ und\n\ manipuliert.\ Die\ Implementierung\ erfolgt\ durch\ ein\ einfaches\n\ Bildformat\:\ Die\ Bildpunkte\ werden\ in\ einem\ zweidimensionalen\n\ Array\ von\ 'short'-Werten\ gehalten.\ Jeder\ Feldeintrag\ kann\ einen\n\ Wert\ zwischen\ 0\ und\ 255\ annehmen.\ Andere\ Werte\ sind\ unzulaessig.\n\ Der\ Wertebereich\ [0..255]\ repraesentiert\ den\ Graustufenbereich\:\n\ 0\ fuer\ Schwarz,\ 255\ fuer\ Weiss\ und\ dazwischenliegende\ Werte\ fuer\n\ die\ Grauabstufungen.\n\ \n\ Beispielmethode\ 'dunkler'\:\ Ein\ geladenes\ Bild\ kann\ um\n\ ein\ gegebenes\ 'delta'\ abgedunkelt\ werden.\n\ \n\ @author\ \ Axel\ Schmolitzky,\ Petra\ Becker-Pechau\n\ @version\ 2017\n
comment1.params=
comment1.target=SWBild()
comment1.text=\n\ Initialisiert\ ein\ Bild\ mit\ einer\ Bilddatei.\ Der\ Benutzer\ kann\ interaktiv\ mit\n\ Hilfe\ eines\ Dateidialogs\ die\ zu\ ladende\ Datei\ auswaehlen.\n
comment10.params=x0\ y0\ r\ i
comment10.target=void\ spot(int,\ int,\ int,\ short)
comment10.text=\n\ Erzeuge\ bei\ diesem\ Bild\ einen\ Spot\ mit\ Radius\ r,\ Mittelpunkt\ x0,y0\ und\n\ Beleuchtungsintensitaet\ i.\ Ausserhalb\ von\ r\ nimmt\ die\ Ausleuchtung\ linear\ ab.\n\ Wie\ im\ wirklichen\ Leben...\n\ \n\ @param\ xo\n\ \ \ \ \ \ \ \ \ \ \ \ x-Koordinate\ des\ Mittelpunktes\n\ @param\ yo\n\ \ \ \ \ \ \ \ \ \ \ \ y-Koordinate\ des\ Mittelpunktes\n\ @param\ r\n\ \ \ \ \ \ \ \ \ \ \ \ Radius\n\ @param\ i\n\ \ \ \ \ \ \ \ \ \ \ \ Beleuchtungsintesitaet\n
comment11.params=delta\ y\ x
comment11.target=void\ hilfsSpot(int,\ int,\ int)
comment12.params=y\ x
comment12.target=short\ gibBildpunkt(int,\ int)
comment12.text=\n\ Gib\ den\ Wert\ eines\ einzelnen\ Bildpunktes\ zurueck.\n\ \n\ @param\ y\n\ \ \ \ \ \ \ \ \ \ \ \ die\ y-Koordinate\ des\ Bildpunktes.\n\ @param\ x\n\ \ \ \ \ \ \ \ \ \ \ \ die\ x-Koordinate\ des\ Bildpunktes.\n\ @return\ den\ Wert\ des\ angegebenen\ Bildpunktes.\n
comment13.params=
comment13.target=void\ zeichneBild()
comment13.text=\n\ Zeichnet\ das\ Bild\ in\ _bilddaten\ neu\n
comment14.params=bilddaten
comment14.target=void\ aktualisiereBildgroesse(short[][])
comment14.text=\n\ Hoehe\ und\ Breite\ neu\ berechnen,\ nachdem\ die\ Bilddaten\ veraendert\ worden\ sind.\n
comment15.params=
comment15.target=void\ erzeugeLeinwand()
comment15.text=\n\ Erzeuge\ die\ Leinwand\ zur\ Darstellung\ und\ zeige\ sie\ an.\n
comment2.params=bilddateiName
comment2.target=SWBild(java.lang.String)
comment2.text=\n\ Initialisiert\ ein\ Bild\ mit\ einer\ Bilddatei.\ Der\ Dateiname\ kann\ als\ absoluter\n\ oder\ relativer\ Pfad\ uebergeben\ werden.\n\ \n\ @param\ bilddateiName\n\ \ \ \ \ \ \ \ \ \ \ \ der\ Name\ der\ Bilddatei\n
comment3.params=delta
comment3.target=void\ dunkler(int)
comment3.text=\n\ Dieses\ Bild\ um\ einen\ Wert\ abdunkeln.\ \n\ \n\ @param\ delta\n\ \ \ \ \ \ \ \ \ \ \ \ Wert\ der\ Abdunkelung.\ Es\ wird\ mit\ dem\ Betrag\ von\ delta\ gerechnet,\ \n\ \ \ \ \ \ \ \ \ \ \ \ deshalb\ darf\ der\ Parameter\ sowohl\ positiv\ als\ auch\ negativ\ sein.\ \ \n
comment4.params=delta
comment4.target=void\ heller(int)
comment4.text=\n\ Dieses\ Bild\ um\ einen\ Wert\ aufhellen.\n\ \n\ @param\ delta\n\ \ \ \ \ \ \ \ \ \ \ \ Wert\ der\ Aufhellung.\ Es\ wird\ mit\ dem\ Betrag\ von\ delta\ gerechnet,\ \n\ \ \ \ \ \ \ \ \ \ \ \ deshalb\ darf\ der\ Parameter\ sowohl\ positiv\ als\ auch\ negativ\ sein.\ \ \n
comment5.params=
comment5.target=void\ invertieren()
comment5.text=\n\ Dieses\ Bild\ invertieren.\n
comment6.params=
comment6.target=void\ horizontalSpiegeln()
comment6.text=\n\ Dieses\ Bild\ horizontal\ spiegeln.\n
comment7.params=
comment7.target=void\ weichzeichnen()
comment7.text=\n\ Dieses\ Bild\ weichzeichnen.\n
comment8.params=bild
comment8.target=short\ durchschnitt(short[])
comment9.params=
comment9.target=void\ punktSpiegeln()
comment9.text=\n\ Dieses\ Bild\ am\ Mittelpunkt\ spiegeln.\n
numComments=16
